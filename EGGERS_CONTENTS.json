{"home":{"content":"# Introduction to the Terminal\n---\n\nWelcome to lecture 5! Here's a brief class breakdown.\n\n#### Learning Objectives\n---\n\n1. Explore FE frameworks like Bootstrap or Semantic UI\n2. Explore the terminal and understand how to use some basic terminal commands\n\n\n#### To Do Today\n---\n\n* #### [Warmup](#warmup)\n* #### [Frontend Frameworks](#frontend-frameworks)\n* #### [FE Frameworks Practice](#fe-frameworks-practice)\n* #### [Terminal](#terminal)\n* #### [Terminal Practice](#terminal-practice)\n\n#### Additional Resources\n---\n\n* #### [Terminal Notes](https://canvas.instructure.com/courses/1105667/files/47398843?module_item_id=11295564)\n\n#### Installations\n---\n\n* #### [NodeJS for Mac](http://blog.teamtreehouse.com/install-node-js-npm-mac)\n* #### [NodeJS for PC](http://blog.teamtreehouse.com/install-node-js-npm-windows)\n\n\n","idx":0},"title":{"content":"Introduction to the Terminal","idx":1},"desc":{"content":"FE Frameworks + Intro to Terminal","idx":2},"warmup":{"content":"# Warmup\n---\n\nLet's begin with a simple response exercise.\n\n**Consider** the following menu:\n\n<a href=\"https://raw.githubusercontent.com/mottaquikarim/nycda_day_5/master/menu_page_1.png\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/mottaquikarim/nycda_day_5/master/menu_page_1.png\" style=\"width: 100%; height: auto;\"></a>\n\n**Without** using a front-end framework, implement the top menu.\n\nThen, at **800px**, update the menu so that it looks like this:\n\n<a href=\"\nhttps://raw.githubusercontent.com/mottaquikarim/nycda_day_5/master/menu_page_1_resp.png\" target=\"_blank\"><img src=\"\nhttps://raw.githubusercontent.com/mottaquikarim/nycda_day_5/master/menu_page_1_resp.png\" style=\"width: 100%; height: auto;\"></a>\n\nNotice how the menu has been **replaced** by an icon. For now, do not worry about styles or functionality. Just replace your row of menu items with an icon that looks like a hamburger menu.","idx":3},"frontend-frameworks":{"content":"# Frontend Frameworks\n---\n\n**Learning Objective**: What are front-end frameworks and how do they allow us to create modern, professional looking websites?\n\n#### Class Activity\n---\n\nTogether, as a class, we will create the resume page of a famous superhero. Using one of the FE frameworks detailed below, we will see how easy it can be to build a professional looking website super quickly.\n\n#### Introduction\n---\n\nFrameworks are basically CSS stylesheets that were developed by other people. They are built in such a way that you don't have to spend time and energy building out commonly reusable components like **buttons** and **input fields**, etc\n\n#### Semantic UI\n---\nSome quick facts:\n\n* They write the CSS and HTML blocks for you, all you do is copy and paste\n* With a basic understanding of HTML/CSS, you can easily start building professional looking websites\n\n**Visit their [website](http://semantic-ui.com/).**\n\n**Read the [docs](http://semantic-ui.com/introduction/getting-started.html).**\n\n#### Material Design\n---\nSome quick facts:\n\n* Built by Google.\n* Follows the Material Design spec that a lot of new Google apps now implement (like Google Calendar, Google Inbox, etc).\n\n**Visit their [website](https://getmdl.io/).**\n\n#### Bootstrap\n---\n\nSome quick facts:\n\n* Built by your boys over @twitter, it is a framework for quickly building out complex webpages\n* Probably **the** most popular front-end framework.\n\n**Visit their [website](http://getbootstrap.com/).**\n\n**Read the [docs](http://getbootstrap.com/getting-started/).**\n\n#### Primer\n---\n\nSome quick facts:\n\n* Build by your boys over @github\n* Much simpler than bootstrap\n* Lighter weight too!\n\n**Visit their [website](http://primercss.io/).**\n","idx":4},"fe-frameworks-practice":{"content":"# FE Frameworks Practice\n---\n\n\n#### Task 1\nLet's get a simple site going that pulls in one of the following frameworks. Let's then use the documentation to build out a simple UI element using that framework. (**IE**: for Semantic UI, get a **[card](http://semantic-ui.com/views/card.html)** to render).\n\n#### Task 2\nLet's see if we can rebuild our layouts using a frontend framework.\n\nCreate a [new project](http://fewdmaterials.github.io/boilerplates/) and then using the documentation provided by your chosen frontend framework, rebuild the following layouts. \n\n**NOTE**: you will likely have to add some of your own CSS styles here as well to achieve the gray boxes and min-heights.\n\n**STRETCH GOAL**: make these columns responsive.\n\n\n#### Simple Layout\n\n<a href=\"https://raw.githubusercontent.com/mottaquikarim/nycda_day_4/master/Layout1.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/mottaquikarim/nycda_day_4/master/Layout1.png\" style=\"width: 100%; height: auto;\">\n</a>\n\n\n\n<p></p><p></p>\n\n#### Simple Marketing\n\n<a href=\"https://raw.githubusercontent.com/mottaquikarim/nycda_day_4/master/Layout3.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/mottaquikarim/nycda_day_4/master/Layout3.png\" style=\"width: 100%; height: auto;\">\n</a>\n\n<p></p><p></p>","idx":5},"terminal":{"content":"# Terminal\n---\n\n#### Learning Objectives\n\n- Get familiar with the Terminal, understand how to start it up\n\n- Learn how to navigate your filesystem (like you would with Explorer or the Finder) with the Terminal\n\n---\n\n#### Getting Setup\n\nIf you are a Windows user, use Git Bash (included with Git) for all Terminal interactions. To launch, Start Menu -> Programs -> Git -> Git Bash\n\nInstall Git Bash at:\n[http://git-scm.com/downloads](http://git-scm.com/downloads)\n\n---\n\n#### What is the Terminal?\n\n- An interface to a 'lower-level' of your computer than the Graphical User Interface (GUI, or 'point and click')\n\n- Similar to older computer systems without a GUI\n\n  - Every command must be typed in\n\n  - The mouse is not used to interact with the terminal\n\n---\n\n#### Why are we learning about the terminal?\n\n- Some programs needed for development only run from within the terminal\n\n- More advanced programming isn't possible without using the terminal, so it's good to start when you start learning\n\n- This way, you can practice your skills as you go before they become crucial and a stumbling block\n\n- Your friends will think you're a `l33t h4ck3r` when they see you typing commands into a black screen!\n\n---\n\n#### What can you do with the Terminal?\n\n- Quickly navigate around your computer's file system\n\n- Run command-line-only programs like Git and your own web server\n\n- Monitor the processes running on your computer and have control over them\n\n---\n\n#### Basic Terminal Commands\n\nBefore you learn more advanced things, you should first master how to navigate around your file system using the terminal.\n\nTo open the Terminal on a mac, press command space, type Terminal, then Enter.\n\nOn a Windows machine, use Git Bash (downloadable at [git-scm.com](git-scm.com))\n\n---\n\n#### A Note\n\nIf you see text with a dollar sign before it, it means to enter it into the Terminal.\n\n````bash\n$ pwd\n````\n\nmeans to enter the word 'pwd' into your Terminal and press enter.\n\nIf you see text directly after this, it is \"sample output\", meaning what you might see after you enter the command.\n\nDon't be afraid to press enter[^1], your computer won't explode!\n\n[^1]: Unless someone tells you to type `sudo rm -rf /`, which will delete your entire Hard Drive.\n\n---\n\n#### `pwd` - print working directory\n\n- Consider pwd the \"north star\" - it will always tell you what directory you're currently in.\n\n- What directory are you in right now?\n\n````bash\n$ pwd\n/Users/zachfeldman\n````\n\n---\n\n#### `ls` - list files in current directory\n\n- This is another way of figuring out where you are\n\n- If you know what files are in the directory you're searching for, it's a confirmation of your location in the file system\n\n````bash\n$ ls\nApplications    DropBox    Movies\nDesktop         Library    Pictures\nDocuments       Music      Public\n````\n\n---\n\n#### `cd` - change directory\n\n- If typed with no input, will take you to your home directory\n\n````bash\n$ cd\n$ pwd\n/Users/zachfeldman\n````\n\n- If given an input directory right afterwards, `cd` will take you there if that directory is in the directory you're currently residing in\n\n````bash\n$ cd Desktop\n$ pwd\n/Users/zachfeldman/Desktop\n````\n---\n\n#### `cd` - change directory\n\n- You can also give an absolute location to get anywhere specific\n\n````bash\n$ cd /Users/zachfeldman/Documents\n$ pwd\n/Users/zachfeldman/Documents\n````\n\n- In the Terminal, a dot represents the current folder and two dots represents the folder this folder is in\n\n- You can `cd` to the folder above the one you're in like so:\n\n````bash\n$ cd ..\n````\n\n---\n\n#### `cd` - change directory\n\n- If you want to go up multiple levels\n\n````bash\n$ pwd\n/Users/zachfeldman/dev/project-one\n$ cd ../..\n$ pwd\n/Users/zachfeldman\n````\n\n- The tilde (~) is a shortcut for your home directory\n\n````bash\n$ cd ~/Desktop\n$ pwd\n/Users/zachfeldman/Desktop\n````\n\n----\n\n#### Tip: Tab auto-completion\n\n- Try pressing tab after typing the first letter or two of the directory you're trying to go to\n\n- Keep this trick in mind later on when entering files or folders as input to terminal commands\n\n---\n\n#### `touch` - create a blank file\n\n- Touch will create a completely blank file in a directory for you\n\n- This can be nice when 'scaffolding' a new project\n\n````bash\n$ touch index.html\n$ ls\nindex.html\n```` \n---\n\n#### Tip: File and directory names\n\n- If your file name contains a space, it must be escaped, otherwise the Unix interpreter will assume that you meant to enter the next command.\n\n````bash\n$ cd /My Awesome Folder #WRONG\n$ cd /My\\ Awesome\\ Folder #RIGHT\n````\n\n- This is why it's better to name directories with underscores, however, you can also use tab to auto-complete filenames with spaces in them\n\n---\n\n#### Creating directories with `mkdir`\n\n- To create a directory, use the `mkdir` command\n\n````bash\n$ mkdir directory_name\n````\n\n---\n\n#### `rm` - remove\n\n- **There is not a recycle bin for files removed this way, so be careful, it will delete files** _**permanently**_\n\n- Takes a file name as input to delete _**permanently**_\n\n````bash\n$ rm file.txt\n````\n\n- To remove folders and everything in them _**permanently**_, use a recursive `rm`\n\n````bash\n$ rm -r folder/\n````\n\n---\n\n#### Tip: Command line flags\n\n- Wondering what the `-r` meant after the `rm` command on the last slide?\n\n- `-r` is a **command line flag**, an option sent to a command\n\n- You could also append an `f` to the flag to force removal:\n\n````bash\n$ rm -rf folder/\n````\n\n---\n\n#### Exercise: Getting to know the Terminal\n\n- Open up the terminal and test out the commands you've just learned\n\n- Try creating the scaffolding for a basic website inside of your `Desktop` folder using only Terminal commands:\n\n````bash\n# directory structure\nmy-project\n  index.html\n  styles\n    style.css\n````\n\n---\n\n#### Quickly viewing files\n\n- less - a program included with unix-based systems that lets you easily view text files\n\n````bash\n$ less filename.rb\n````\n\n- To navigate, use the arrow keys. To quit out of less, use the `q` key\n\n---\n\n#### Copying files\n\nTo copy a file, use the aptly named `cp` command.\n\n````bash\n$ cp index.html index2.html\n$ ls\nindex.html index2.html\n````\n\n---\n\n#### Renaming or Moving files\n\nTo move a file, use the mv command:\n\n````bash\n$ mv index.html ~/Desktop/project_folder\n````\n\nTo rename a file, mv is also used:\n\n````bash\n$ mv index.html about.html\n````\n\n---\n\n#### Tip: Re-entering commands\n\n- To re-enter a command you've entered on the command line recently, press the up arrow\n\n- Your history of commands is preserved within the session you're currently in\n\n- Once you restart the terminal, you'll lose this history\n\n---\n\n#### Resources\n\n**Codecademy**\n\n[Learn the Command Line](https://www.codecademy.com/learn/learn-the-command-line)\n\n**TeamTreeHouse**\n\n[Console Foundations](https://teamtreehouse.com/library/console-foundations)\n\n---\n\n#### Quiz\n\n1. What are some of the terminal's main uses?\n\n2. Name three terminal commands and describe what they do.\n\n3. How would you quickly re-enter a command you've just tried?\n","idx":6},"terminal-practice":{"content":"# Terminal Practice\n---\n","idx":7},"__list__":["home","title","desc","warmup","frontend-frameworks","fe-frameworks-practice","terminal","terminal-practice"]}